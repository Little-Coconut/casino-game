{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/casino-game/src/game/game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport DataTable from '../dense-table/index';\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = ({\n  onUpdateBalance\n}) => {\n  _s();\n\n  const [id, updateId] = useState(null);\n  const [numbers, updateNumbers] = useState({\n    first: null,\n    second: null,\n    third: null\n  });\n  const [time, upadateTime] = useState(null);\n  const [history, updateHistory] = useState(null);\n  const [start, updateStart] = useState(false);\n  const [mass, updateMass] = useState([]);\n  const massRef = useRef(mass);\n  useEffect(() => {\n    const {\n      first,\n      second,\n      third\n    } = numbers;\n\n    if (first !== null && second !== null && third !== null) {\n      if (first === 7 && second === 7 && third === 7) {\n        onUpdateBalance(10.0);\n      } else if (first === second === third) {\n        onUpdateBalance(5.0);\n      } else if (first === second || second === third || first === third) {\n        onUpdateBalance(0.5);\n      }\n\n      const time = new Date();\n      const objMass = {\n        id: massRef.current.length + 1,\n        time: `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`,\n        history: `${first}${second}${third}`\n      };\n      massRef.current.push(objMass);\n      updateMass([...massRef.current]);\n    }\n  }, [numbers]);\n  useEffect(() => {\n    massRef.current = mass;\n  }, [mass]);\n\n  const random = () => {\n    let rand = 0 + Math.random() * (9 + 1 - 0);\n    return Math.floor(rand);\n  };\n\n  const randomNumberFunc = () => {\n    onUpdateBalance(-1);\n    updateNumbers({\n      first: random(),\n      second: random(),\n      third: random()\n    });\n    updateId(id + 1);\n  };\n\n  const spin = () => {\n    updateNumbers({\n      first: 7,\n      second: 7,\n      third: 7\n    });\n    updateId(id + 1);\n  };\n\n  const starterButton = () => {\n    updateNumbers({\n      first: 0,\n      second: 0,\n      third: 0\n    });\n    updateStart(true);\n    updateId(0);\n  }; // const stoperButton = () => {\n  //     updateFirstNumber(null);\n  //     updateSecondNumber(null);\n  //     updateThirdNumber(null);\n  //     updateStart(false);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game_mainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game_mainDiv_centerDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forNumbers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forFirstNumber number\",\n            children: numbers.first\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forSecondNumber number\",\n            children: numbers.second\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forThirdNumber number\",\n            children: numbers.third\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"usualButton\",\n            onClick: randomNumberFunc,\n            children: \"GET NUMBERS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"usualButton\",\n            onClick: spin,\n            children: \"SPIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"usualButton\",\n            children: \"CLOSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mainButtonStart\",\n          onClick: starterButton,\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game_mainDiv_rightDiv\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: mass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Game, \"Q1fXcb2Po0esTKdu2deAwWlbx70=\");\n\n_c = Game;\nexport default Game; // {\n//     mass.map((item, i) => {\n//         return <div> \n//             <p>{item.id}</p>\n//             <p>{item.time}</p>\n//             <p>{item.history}</p>\n//                </div>\n//     })\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/mac/Downloads/casino-game/src/game/game.jsx"],"names":["React","useState","useEffect","useRef","DataTable","Game","onUpdateBalance","id","updateId","numbers","updateNumbers","first","second","third","time","upadateTime","history","updateHistory","start","updateStart","mass","updateMass","massRef","Date","objMass","current","length","getHours","getMinutes","getSeconds","push","random","rand","Math","floor","randomNumberFunc","spin","starterButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport DataTable from '../dense-table/index';\r\nimport './game.css';\r\n\r\nconst Game = ({onUpdateBalance}) =>  {\r\n    const [ id, updateId] = useState(null);\r\n    const [ numbers, updateNumbers] = useState({first: null, second: null, third: null});\r\n    const [ time, upadateTime] = useState(null);\r\n    const [ history, updateHistory] = useState(null);\r\n    const [start, updateStart] = useState(false);\r\n    const [ mass, updateMass] = useState([]); \r\n    const  massRef = useRef(mass);\r\n\r\n    useEffect(() => {\r\n        const { first, second, third } = numbers;\r\n       \r\n        if (first !== null && second !== null && third !== null) {\r\n            if(first === 7 && second === 7 && third === 7 ){\r\n                onUpdateBalance(10.0);\r\n            } else if (first === second === third) {\r\n                onUpdateBalance(5.0);\r\n            } else if (first === second || \r\n                second === third ||\r\n                first === third) {\r\n                onUpdateBalance(0.5);\r\n            }\r\n            const time = new Date();\r\n            const objMass = {\r\n                id: massRef.current.length + 1,\r\n                time: `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`,\r\n                history: `${first}${second}${third}` \r\n            };\r\n            massRef.current.push(objMass);\r\n           updateMass([...massRef.current]);\r\n         \r\n        }    \r\n    }, [numbers]);\r\n\r\n    useEffect(() => {\r\n        massRef.current = mass;\r\n    }, [mass]);\r\n    \r\n\r\n    const random = () => {\r\n        let rand = 0 + Math.random() * (9 + 1 - 0);\r\n        return Math.floor(rand);\r\n    }\r\n\r\n    const randomNumberFunc = () => {\r\n    onUpdateBalance(-1);\r\n    updateNumbers({first: random(), second: random(), third: random()});\r\n    updateId(id+1);\r\n    }\r\n\r\n    const spin = () => {\r\n        updateNumbers({first: 7, second: 7, third: 7});\r\n    updateId(id+1);\r\n    };\r\n    const starterButton = () =>{\r\n        updateNumbers({first: 0, second: 0, third: 0});\r\n        updateStart(true);\r\n        updateId(0);\r\n    }\r\n    // const stoperButton = () => {\r\n    //     updateFirstNumber(null);\r\n    //     updateSecondNumber(null);\r\n    //     updateThirdNumber(null);\r\n    //     updateStart(false);\r\n    // }\r\n    return(\r\n            <div className='game_mainDiv'>\r\n                {/* <div className=\"game_mainDiv_leftDiv\">\r\n                    <div>\r\n                        <span>ID: {id}</span>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"game_mainDiv_centerDiv\">\r\n                <div className=\"popup\">\r\n                      <div className=\"forNumbers\">\r\n                            <div className=\"forFirstNumber number\">{numbers.first}</div>\r\n                            <div className=\"forSecondNumber number\">{numbers.second}</div>\r\n                            <div className=\"forThirdNumber number\">{numbers.third}</div>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <button className=\"usualButton\" onClick={randomNumberFunc}>\r\n                                GET NUMBERS\r\n                            </button>\r\n                            <button className=\"usualButton\" onClick={spin}>\r\n                                SPIN\r\n                            </button>\r\n                            <button className=\"usualButton\" >\r\n                            CLOSE\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mainButtons\">\r\n                        <button className=\"mainButtonStart\" onClick={starterButton}>\r\n                            START\r\n                        </button> \r\n                    </div>\r\n                </div>\r\n                <div className=\"game_mainDiv_rightDiv\">\r\n                    \r\n   <DataTable rows={mass}/>\r\n                   \r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Game;\r\n// {\r\n//     mass.map((item, i) => {\r\n \r\n//         return <div> \r\n//             <p>{item.id}</p>\r\n//             <p>{item.time}</p>\r\n//             <p>{item.history}</p>\r\n//                </div>\r\n//     })\r\n// }"]},"metadata":{},"sourceType":"module"}